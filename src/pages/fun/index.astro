---

import "@/styles/globals.css";
import Layout from "../../layouts/Layout.astro";
import HomeComponent from "@/components/FunHomeComponent.astro";
import { ModeToggle } from "@/components/ModeToggle";

---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }

    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
  };

  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });

    observer.observe(document.documentElement, { attributes: true, attributeFilter: ["class"] });
  }
</script>

<Layout>
  <main class="text-white w-full" id="hover-div"
  style={{
    backgroundImage: "url(/background3.webp)",
    backgroundSize: "10vw 10vw",
  }}>
    <div class="absolute top-0 right-0 z-50 p-2">
      <ModeToggle client:only />
    </div>

    <div
      class="bg-zinc-950 [font-family:serif] flex flex-col h-full justify-center lg:mx-40 lg:flex xl:mx-80 2xl:mx-80 [box-shadow:_0px_0px_50px_30px_rgba(0,_0,_0,_1)]"
    >
        <div class="w-full h-24 mb-12" style={{
            backgroundImage: "url(./sparkles.gif)",
            backgroundSize: "12vw",
            backgroundRepeat: "10"
        }} />

      <main id="main" class="w-full h-dvh flex flex-row">
        <div class="h-full w-2/3 px-4">
            <HomeComponent />
        </div>

        <div class="h-full w-1/3 gap-4 flex flex-col">
            <div class="border-4 border-red-500 shadow-lg shadow-red-500">
                <h2 class="text-5xl text-red-500">
                    Links to my socials
                </h2>
                
                <ol class="px-2 *:mb-2">
                    <li><div class="group/github z-50 transition-colors duration-0 border-2 border-red-500 hover:animate-spin hover:border-dashed hover:border-white hover:text-white/50">
                        <a href="https://github.com/Filipsys" target="_blank">
                            github.com/Filipsys
                        </a>
                        <p class="italic">Github</p>
                    </div></li>
            
                    <li><div class="group/linkedin py-1 transition-colors duration-0 border-2 border-red-500 hover:border-dashed hover:animate-spin hover:rotate-180 hover:border-white hover:text-[#0A66C2]">
                        <a href="https://linkedin.com/in/filipsysak" target="_blank">
                            linkedin.com/in/filipsysak
                        </a>
                        <p class="italic">LinkedIn</p>
                    </div></li>
        
                    <li><div class="group/email transition-colors duration-0 border-2 border-red-500 hover:border-dashed hover:border-white hover:animate-bounce hover:text-[#EA4335]">
                        <a href="mailto:quietus.fits_0p@icloud.com">quietus.fits_0p@icloud.com</a>
                        <p class="italic">Email</p>
                    </div></li>
                </ol>
            </div>

            <div class="border-4 border-red-500 shadow-lg shadow-red-500">
                <h2 class="text-5xl text-red-500">
                    Latest blog posts :)
                </h2>

                <ol class="list-decimal px-6">
                    <li>How does Next.js caching work? Why was it reworked?</li>
                    <li>Encrypted images & why/they don't work well.</li>
                    <li>The fl\ood of JavaSc%ipt frameworks, will it gg%et any %etter?</li>
                    <li>C vs-@C++ a%. th<span class="line-through">e ol@d Jav/Sc</span>ri]]]]tvs<span class="line-through">..,</span>5T5peScr%pt.</li>
                </ol>
            </div>

            <div class="flex flex-col gap-8">
                <div class="w-2/3 h-auto">
                    <div class="h-36 w-36" style={{
                      backgroundImage: "url(./noai.gif)",
                      backgroundSize: "150px",
                      backgroundRepeat: "no-repeat"
                  }} />
    
                <p class="w-full">This place is a <i>NO AI</i> sanctuary. Any AI models seen around will be unmercifully deleted using the newest top technology laser ray.</p>
            </div>

            <p class="italic text-4xl font-bold ">Website of the week</p>

            <div>
                <a target="_blank" href="https://neobrutalism.com/" class="text-green-500">https://neobrutalism.com</a>
                <iframe src="https://neobrutalism.com" title="WOTW" class="w-full border-dashed aspect-video border-8 border-green-500 shadow-lg shadow-green-500" style={{ zoom: "0.25"}}></iframe>
            </div>

            <p class="text-yellow-400 font-mono text-4xl">Quote of the day</p>
            <p class="italic">"When one does not want, you cannot make him want it." - Arystoteles</p>
        </div>
      </main>
    </div>

    <div class="h-40 w-24" id="extinguisher" style={{
      backgroundImage: "url(./extinguisher.gif)",
      backgroundSize: "150px",
      backgroundRepeat: "no-repeat",
      opacity: "0",
      zIndex: "100"
  }} />
  </main>
</Layout>

<script>
  let pageOnFire = false;

  const createFire = (mainDiv: HTMLElement, top: number, left: number) => {
    const fireDiv = document.createElement("fire");
    fireDiv.style.position = "absolute";
    fireDiv.style.top = `${top}px`;
    fireDiv.style.left = `${left}px`;
    fireDiv.style.width = "300px";
    fireDiv.style.height = "200px";
    fireDiv.style.zIndex = "50";
    fireDiv.style.backgroundImage = "url(./fire.gif)";

    mainDiv.appendChild(fireDiv);
  }

  const setOnFire = () => {
    const mainDiv = document.querySelector("#main") as HTMLElement;
    if (!mainDiv) return;
    pageOnFire = true;

    const createWarning = () => {
      const warning = document.createElement("warning");
      warning.style.position = "absolute";
      warning.style.height = "100px";
      warning.style.width = "100px";
      warning.style.backgroundImage = "url(./emergency.gif)";
      warning.style.backgroundSize = "100px";
      warning.style.backgroundRepeat = "no-repeat";
      warning.style.top = `${Math.random() * mainDiv.clientHeight}px`;
      warning.style.left = `${Math.random() * mainDiv.clientWidth}px`;
      warning.style.boxShadow = "0px 0px 10px 10px red"

      mainDiv.appendChild(warning);
    }

    for (let i = 0; i <= 20; i++) {
      createWarning();
    }
    

    const extinguisher = document.getElementById("extinguisher");
    if (!extinguisher) return;

    createFire(mainDiv, Math.random() * mainDiv.clientWidth, Math.random() * (mainDiv.clientHeight - 300) + 300);
    extinguisher.style.opacity = "1";
  }

  const spreadFire = () => {
    const getFires = document.querySelectorAll("fire");

    getFires.forEach((fire) => {
      const fireLeft = parseInt((fire as HTMLElement).style.left.slice(0, (fire as HTMLElement).style.left.length - 2));
      const fireTop = parseInt((fire as HTMLElement).style.top.slice(0, (fire as HTMLElement).style.top.length - 2));

      const directionX = Math.random() >= 0.5 ? -1 : 1;
      const directionY = Math.random() >= 0.5 ? -1 : 1;

      const mainDiv = document.querySelector("#main") as HTMLElement;
      if (!mainDiv) return;

      createFire(mainDiv, fireTop + 100 * directionY, fireLeft + 100 * directionX);
    })
  }

  const extinguisher = document.getElementById("extinguisher");
  extinguisher?.addEventListener("mousemove", (event: MouseEvent) => {
    const extinguisher = document.getElementById("extinguisher");
    if (!extinguisher) return;
    const fires = document.querySelectorAll("fire");
    if (!fires) return;
    const mainDiv = document.querySelector("#main") as HTMLElement;
    if (!mainDiv) return;

    extinguisher.style.position = "absolute";
    extinguisher.style.top = `${event.clientY + window.scrollY - extinguisher.clientHeight / 2}px`;
    extinguisher.style.left = `${event.clientX + window.scrollX - extinguisher.clientWidth / 2}px`;

    fires.forEach((fire) => {
      if (parseInt(extinguisher.style.left) + extinguisher.offsetWidth / 2 > parseInt((fire as HTMLElement).style.left) && parseInt(extinguisher.style.left) + extinguisher.offsetWidth / 2 < parseInt((fire as HTMLElement).style.left) + fire.clientWidth && parseInt(extinguisher.style.top) + extinguisher.offsetHeight / 2 > parseInt((fire as HTMLElement).style.top) && parseInt(extinguisher.style.top) + extinguisher.offsetHeight / 2 < parseInt((fire as HTMLElement).style.top) + fire.clientHeight) {
        mainDiv.removeChild(fire);
      }
    })

    if (fires.length == 0) {
      pageOnFire = false;

      const warnings = document.querySelectorAll("warning");
      if (!warnings) return;

      warnings.forEach((warning) => {
        mainDiv.removeChild(warning);
      })

      extinguisher.style.display = "none";
    }
  });

  setTimeout(() => {
    setOnFire();

    setInterval(() => {
      if (!pageOnFire) return;

      spreadFire();
    }, 2000)
  }, 10000);
</script>